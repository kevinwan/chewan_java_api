<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gongpingjia.carplay.po.ActivitySubscription">
	<resultMap id="BaseResultMap" type="com.gongpingjia.carplay.po.ActivitySubscription">
		<id column="userId" property="userid" jdbcType="VARCHAR" />
		<id column="activityId" property="activityid" jdbcType="VARCHAR" />
		<result column="subscribeTime" property="subscribetime" jdbcType="BIGINT" />
	</resultMap>

	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="com.gongpingjia.carplay.po.ActivitySubscriptionKey">
		select
		userId, activityId, subscribeTime
		from activity_subscription
		where userId = #{userid,jdbcType=VARCHAR}
		and activityId = #{activityid,jdbcType=VARCHAR}
	</select>
	
	
	
	<select id="selectByUserId" resultType="java.util.Map" parameterType="java.util.Map">
		select subscription.activityId, organizer, publishTime, start, introduction, location, type, pay, nickname, gender, 
        age, photo, ifnull(concat(#{gpjIMGUrl,jdbcType=VARCHAR} , car.carBrandLogo),'') as carBrandLogo, 
        ifnull(car.carModel, '') as carModel, drivingExperience, resA.count as totalSeat, resB.count as holdingSeat from activity_subscription 
        subscription left join (select id as activityId, organizer, createTime as publishTime, start, ifnull(description, '') as introduction, 
        location, type, paymentType as pay from activity) act on subscription.activityId = act.activityId left join (select activityId, count(*) 
        as count from seat_reservation group by activityId) resA on act.activityId = resA.activityId left join(select activityId, count(*) as count 
        from seat_reservation where userId is not null group by activityId) resB on act.activityId = resB.activityId left join (select user.id as userId, 
        nickname, gender, (year(sysdate()) - birthYear) as age, concat(#{AssetUrl,jdbcType=VARCHAR}, photo) as photo, ifnull((year(sysdate()) - drivingLicenseYear), 
        0) as drivingExperience from user) usr on act.organizer = usr.userId left join (select ifnull(brandLogo, '') as carBrandLogo, ifnull(model, '') as 
        carModel, userId from car) car on car.userId = usr.userId where subscription.userId = #{userId,jdbcType=VARCHAR} order by publishTime desc 
        limit  #{ignore,jdbcType=INTEGER}, #{limit,jdbcType=INTEGER}	
	
	</select>
	
	<delete id="deleteByPrimaryKey" parameterType="com.gongpingjia.carplay.po.ActivitySubscriptionKey">
		delete from activity_subscription
		where userId = #{userid,jdbcType=VARCHAR}
		and activityId = #{activityid,jdbcType=VARCHAR}
	</delete>
	
	<insert id="insert" parameterType="com.gongpingjia.carplay.po.ActivitySubscription">
		insert into activity_subscription (userId, activityId, subscribeTime
		)
		values (#{userid,jdbcType=VARCHAR}, #{activityid,jdbcType=VARCHAR}, #{subscribetime,jdbcType=BIGINT}
		)
	</insert>

	<update id="updateByPrimaryKey" parameterType="com.gongpingjia.carplay.po.ActivitySubscription">
		update activity_subscription
		set subscribeTime = #{subscribetime,jdbcType=BIGINT}
		where userId = #{userid,jdbcType=VARCHAR}
		and activityId = #{activityid,jdbcType=VARCHAR}
	</update>
	
	<select id="selectCountByParam" resultType="java.lang.Integer" parameterType="java.util.Map">
		SELECT 
			count(1) 
		FROM 
			activity_subscription 
		WHERE activityId = #{activityId,jdbcType=VARCHAR} 
			and userId = #{userId,jdbcType=VARCHAR}
	</select>
</mapper>