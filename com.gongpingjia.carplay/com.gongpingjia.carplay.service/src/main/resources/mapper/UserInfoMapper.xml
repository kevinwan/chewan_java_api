<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gongpingjia.carplay.po.UserInfo">
	<resultMap id="UserInfoMap" type="com.gongpingjia.carplay.po.UserInfo">
		<result column="userId" property="userId" jdbcType="VARCHAR" />
		<result column="nickname" property="nickname" jdbcType="VARCHAR" />
		<result column="gender" property="gender" jdbcType="VARCHAR" />
		<result column="age" property="age" jdbcType="INTEGER" />
		<result column="brandLogo" property="carBrandLogo" jdbcType="VARCHAR" />
		<result column="carModel" property="carModel" jdbcType="VARCHAR" />
		<result column="drivingExperience" property="drivingExperience" jdbcType="INTEGER" />
		<result column="province" property="province" jdbcType="VARCHAR" />
		<result column="city" property="city" jdbcType="VARCHAR" />
		<result column="district" property="district" jdbcType="VARCHAR" />
		<result column="photo" property="photo" jdbcType="VARCHAR" />
		<result column="isAuthenticated" property="isauthenticated" jdbcType="TINYINT" />
	</resultMap>
	
	<select id="selectUserInfo" resultMap="UserInfoMap" parameterType="java.lang.String">
		select user.id as userId, nickname, gender, (year(sysdate()) - birthYear) as age, photo, ifnull(brandLogo, "") as brandLogo, ifnull(carModel, "") as carModel,
        ifnull((year(sysdate()) - drivingLicenseYear), 0) as drivingExperience, province, city, district, isAuthenticated from user left join (select brandLogo, model as carModel, userId from car) as CAR on user.id = CAR.userId
        where user.id = #{userid,jdbcType=VARCHAR}
	</select>
	
	<select id="userListenList" resultMap="UserInfoMap" parameterType="java.util.Map">
		select toUser as userId, nickname, gender, age, photo, drivingExperience, carBrandLogo, carModel from user_subscription subscription left join (select user.id as userId,
		nickname, gender, (year(sysdate()) - birthYear) as age, photo,ifnull((year(sysdate()) - drivingLicenseYear), 0) as drivingExperience from user) usr on subscription.toUser=usr.userId
        left join (select ifnull(brandLogo, "") as carBrandLogo, ifnull(model, "") as carModel, userId from car) car on car.userId= usr.userId 
        where subscription.fromUser = #{userId,jdbcType=VARCHAR} 
        order by subscription.subscribeTime 
        desc limit #{ignore,jdbcType=INTEGER} , #{limit,jdbcType=INTEGER}
	</select>
	
</mapper>